<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>Parente's Mindtrove</title>
    <link>mindtrove.info</link>
    <description>Blog of Peter Parente</description>
    <pubDate>Sun, 04 Nov 2018 02:08:24 GMT</pubDate>
    <generator>custom</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>Jupyter Tidbit: Display handles</title>
      <link>mindtrove.info/jupyter-tidbit-display-handles/</link>
      <pubDate>Sat, 03 Nov 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-display-handles/</guid>
      <description>Jupyter Tidbit: Display handles</description>
      <content:encoded><![CDATA[<p>IPython's <code>display()</code> function can return a <code>DisplayHandle</code> object. You can use a <code>DisplayHandle</code> to update the output of one cell from any other cell in a Jupyter Notebook.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: IPython's ! returns an SList</title>
      <link>mindtrove.info/jupyter-tidbit-ipython-slists/</link>
      <pubDate>Sat, 15 Sep 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-ipython-slists/</guid>
      <description>Jupyter Tidbit: IPython's ! returns an SList</description>
      <content:encoded><![CDATA[<p>IPython <em>shell assignment</em> (the <code>!</code> operator) evaluates a command using the local shell (e.g., <code>bash</code>) and returns a <em>string list</em>  (<code>IPython.utils.text.SList</code>). An <code>SList</code> is a list-like object containing "chunks" of stdout and stderr, properties for accessing those chunks in different forms, and convenience methods for operating on them.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: Run a notebook headlessly</title>
      <link>mindtrove.info/jupyter-tidbit-run-notebook-headlessly/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-run-notebook-headlessly/</guid>
      <description>Jupyter Tidbit: Run a notebook headlessly</description>
      <content:encoded><![CDATA[<p>You can use <a href="https://github.com/jupyter/nbconvert">nbconvert</a> to execute a notebook from the command line (aka headlessly) and store the results in a new notebook file, an HTML file, a PDF, etc. Tools based on nbconvert, like <a href="https://github.com/nteract/papermill">papermill</a> and <a href="https://github.com/jhamrick/nbflow">nbflow</a>, take this capability a step further and let you easily parameterize and chain notebooks.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: Run and say "done!"</title>
      <link>mindtrove.info/jupyter-tidbit-run-and-say-done/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-run-and-say-done/</guid>
      <description>Jupyter Tidbit: Run and say "done!"</description>
      <content:encoded><![CDATA[<p><a href="https://caniuse.com/#feat=speech-synthesis">Many modern web browsers</a> provide a speech synthesis API for JavaScript.You can write and invoke a function to have your notebook speak when it finishes executing certain cells, whether you're running it in JupyterLab (&gt;=0.34) or classic Jupyter Notebook.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: Kernels for text files in JupyterLab</title>
      <link>mindtrove.info/jupyter-tidbit-kernels-for-text-files/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-kernels-for-text-files/</guid>
      <description>Jupyter Tidbit: Kernels for text files in JupyterLab</description>
      <content:encoded><![CDATA[<p>You can associate a Console panel and kernel with a text editor in JupyterLab, and use it to execute selected code, RStudio style.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: Launch Notebook on Binder without leaving your browser</title>
      <link>mindtrove.info/jupyter-tidbit-binder-from-browser/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-binder-from-browser/</guid>
      <description>Jupyter Tidbit: Launch Notebook on Binder without leaving your browser</description>
      <content:encoded><![CDATA[<p>You can launch a temporary <a href="https://github.com/jupyter/notebook">Jupyter Notebook</a> server in the cloud with any pip or conda packaged libraries preinstalled using the <a href="https://gist.github.com">GitHub Gist</a> and <a href="https://mybinder.org">Binder</a> web UIs.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: Use nbconvert to clear notebook outputs</title>
      <link>mindtrove.info/jupyter-tidbit-clear-outputs/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-clear-outputs/</guid>
      <description>Jupyter Tidbit: Use nbconvert to clear notebook outputs</description>
      <content:encoded><![CDATA[<p><a href="http://nbconvert.readthedocs.io/en/stable/">nbconvert</a> has a preprocessor that clears cell outputs from notebook files, leaving cell inputs intact.</p>]]></content:encoded>
    </item>
    <item>
      <title>Jupyter Tidbit: %run your ipynb file</title>
      <link>mindtrove.info/jupyter-tidbit-run-ipynb-files/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 </pubDate>
      <guid>mindtrove.info/jupyter-tidbit-run-ipynb-files/</guid>
      <description>Jupyter Tidbit: %run your ipynb file</description>
      <content:encoded><![CDATA[<p>The <code>%run</code> magic provided by IPython not only supports the execution of regular Python scripts, it also runs Jupyter Notebook files (.ipynb). </p>]]></content:encoded>
    </item>
    <item>
      <title>Flatten Nested JSON with Pandas</title>
      <link>mindtrove.info/flatten-nested-json-with-pandas/</link>
      <pubDate>Thu, 09 Jun 2016 00:00:00 </pubDate>
      <guid>mindtrove.info/flatten-nested-json-with-pandas/</guid>
      <description>Flatten Nested JSON with Pandas</description>
      <content:encoded><![CDATA[<p>I believe the <a href="http://pandas.pydata.org">pandas</a> library takes the expression "batteries included" to a whole new level (in a good way). Recent evidence: the <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.io.json.json_normalize.html">pandas.io.json.json_normalize</a> function. It turns an array of nested JSON objects into a flat DataFrame with dotted-namespace column names. It may not seem like much, but I've found it invaluable when working with responses from RESTful APIs.</p>]]></content:encoded>
    </item>
    <item>
      <title>Kicking the Tires: Bluemix Insights for Weather</title>
      <link>mindtrove.info/bluemix-insights-for-weather/</link>
      <pubDate>Thu, 14 Apr 2016 00:00:00 </pubDate>
      <guid>mindtrove.info/bluemix-insights-for-weather/</guid>
      <description>Kicking the Tires: Bluemix Insights for Weather</description>
      <content:encoded><![CDATA[<p>In this notebook, we're going to poke at the <a href="https://new-console.ng.bluemix.net/docs/services/Weather/index.html#weather">Bluemix Insights for Weather service</a> from Python. We'll look at what kinds of queries we can make and do a few basic things with the data. We'll keep a running commentary that can serve as an introductory tutorial for developers who want to go off and build more sophisticated apps and analyses using the service.</p>]]></content:encoded>
    </item>
  </channel>
</rss>
