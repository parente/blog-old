<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">Parente's Mindtrove</title>
  <subtitle type="text">Blog of Peter Parente</subtitle>

  <updated>2019-02-03T15:38:32Z</updated>
  <generator>custom</generator>
  <link rel="alternate" type="text/html" href="mindtrove.info" />
  <id>mindtrove.info/feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="mindtrove.info/feed/atom/" />
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Config, data, and runtime paths ]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-config-paths/" />
    <id>mindtrove.info/jupyter-tidbit-config-paths/</id>
    <updated>2019-02-03T00:00:00Z</updated>
    <published>2019-02-03T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Config, data, and runtime paths ]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-config-paths/"><![CDATA[<p>You can get a list of standard paths Jupyter tools use for configuration, static assets, and temporary runtime files by running the command <code>jupyter --paths</code>.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Display handles]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-display-handles/" />
    <id>mindtrove.info/jupyter-tidbit-display-handles/</id>
    <updated>2018-11-03T00:00:00Z</updated>
    <published>2018-11-03T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Display handles]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-display-handles/"><![CDATA[<p>IPython's <code>display()</code> function can return a <code>DisplayHandle</code> object. You can use a <code>DisplayHandle</code> to update the output of one cell from any other cell in a Jupyter Notebook.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: IPython's ! returns an SList]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-ipython-slists/" />
    <id>mindtrove.info/jupyter-tidbit-ipython-slists/</id>
    <updated>2018-09-15T00:00:00Z</updated>
    <published>2018-09-15T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: IPython's ! returns an SList]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-ipython-slists/"><![CDATA[<p>IPython <em>shell assignment</em> (the <code>!</code> operator) evaluates a command using the local shell (e.g., <code>bash</code>) and returns a <em>string list</em>  (<code>IPython.utils.text.SList</code>). An <code>SList</code> is a list-like object containing "chunks" of stdout and stderr, properties for accessing those chunks in different forms, and convenience methods for operating on them.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Run a notebook headlessly]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-run-notebook-headlessly/" />
    <id>mindtrove.info/jupyter-tidbit-run-notebook-headlessly/</id>
    <updated>2018-09-05T00:00:00Z</updated>
    <published>2018-09-05T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Run a notebook headlessly]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-run-notebook-headlessly/"><![CDATA[<p>You can use <a href="https://github.com/jupyter/nbconvert">nbconvert</a> to execute a notebook from the command line (aka headlessly) and store the results in a new notebook file, an HTML file, a PDF, etc. Tools based on nbconvert, like <a href="https://github.com/nteract/papermill">papermill</a> and <a href="https://github.com/jhamrick/nbflow">nbflow</a>, take this capability a step further and let you easily parameterize and chain notebooks.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Run and say "done!"]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-run-and-say-done/" />
    <id>mindtrove.info/jupyter-tidbit-run-and-say-done/</id>
    <updated>2018-08-27T00:00:00Z</updated>
    <published>2018-08-27T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Run and say "done!"]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-run-and-say-done/"><![CDATA[<p><a href="https://caniuse.com/#feat=speech-synthesis">Many modern web browsers</a> provide a speech synthesis API for JavaScript.You can write and invoke a function to have your notebook speak when it finishes executing certain cells, whether you're running it in JupyterLab (&gt;=0.34) or classic Jupyter Notebook.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Kernels for text files in JupyterLab]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-kernels-for-text-files/" />
    <id>mindtrove.info/jupyter-tidbit-kernels-for-text-files/</id>
    <updated>2018-08-24T00:00:00Z</updated>
    <published>2018-08-24T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Kernels for text files in JupyterLab]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-kernels-for-text-files/"><![CDATA[<p>You can associate a Console panel and kernel with a text editor in JupyterLab, and use it to execute selected code, RStudio style.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Launch Notebook on Binder without leaving your browser]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-binder-from-browser/" />
    <id>mindtrove.info/jupyter-tidbit-binder-from-browser/</id>
    <updated>2018-08-23T00:00:00Z</updated>
    <published>2018-08-23T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Launch Notebook on Binder without leaving your browser]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-binder-from-browser/"><![CDATA[<p>You can launch a temporary <a href="https://github.com/jupyter/notebook">Jupyter Notebook</a> server in the cloud with any pip or conda packaged libraries preinstalled using the <a href="https://gist.github.com">GitHub Gist</a> and <a href="https://mybinder.org">Binder</a> web UIs.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: Use nbconvert to clear notebook outputs]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-clear-outputs/" />
    <id>mindtrove.info/jupyter-tidbit-clear-outputs/</id>
    <updated>2018-08-22T00:00:00Z</updated>
    <published>2018-08-22T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: Use nbconvert to clear notebook outputs]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-clear-outputs/"><![CDATA[<p><a href="http://nbconvert.readthedocs.io/en/stable/">nbconvert</a> has a preprocessor that clears cell outputs from notebook files, leaving cell inputs intact.</p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Jupyter Tidbit: %run your ipynb file]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/jupyter-tidbit-run-ipynb-files/" />
    <id>mindtrove.info/jupyter-tidbit-run-ipynb-files/</id>
    <updated>2018-08-21T00:00:00Z</updated>
    <published>2018-08-21T00:00:00Z</published>
    <summary type="html"><![CDATA[Jupyter Tidbit: %run your ipynb file]]></summary>
    <content type="html" xml:base="mindtrove.info/jupyter-tidbit-run-ipynb-files/"><![CDATA[<p>The <code>%run</code> magic provided by IPython not only supports the execution of regular Python scripts, it also runs Jupyter Notebook files (.ipynb). </p>]]></content>
  </entry>
  <entry>
    <author>
      <name>Peter Parente</name>
      <uri>mindtrove.info</uri>
    </author>
    <title type="html"><![CDATA[Flatten Nested JSON with Pandas]]></title>
    <link rel="alternate" type="text/html" href="mindtrove.info/flatten-nested-json-with-pandas/" />
    <id>mindtrove.info/flatten-nested-json-with-pandas/</id>
    <updated>2016-06-09T00:00:00Z</updated>
    <published>2016-06-09T00:00:00Z</published>
    <summary type="html"><![CDATA[Flatten Nested JSON with Pandas]]></summary>
    <content type="html" xml:base="mindtrove.info/flatten-nested-json-with-pandas/"><![CDATA[<p>I believe the <a href="http://pandas.pydata.org">pandas</a> library takes the expression "batteries included" to a whole new level (in a good way). Recent evidence: the <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.io.json.json_normalize.html">pandas.io.json.json_normalize</a> function. It turns an array of nested JSON objects into a flat DataFrame with dotted-namespace column names. It may not seem like much, but I've found it invaluable when working with responses from RESTful APIs.</p>]]></content>
  </entry>
</feed>
